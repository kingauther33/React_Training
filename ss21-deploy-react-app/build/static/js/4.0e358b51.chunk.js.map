{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","console","log","quoteId","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,yICkDXC,EA5CQ,SAACC,GACvB,IAAMC,EAAiBC,mBAEvB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAErBC,EAAmBR,EAAnBQ,eAERC,QAAQC,IAAIV,EAAMW,SAElBC,qBAAU,WACM,cAAXN,GAA2BC,GAC9BC,MAEC,CAACF,EAAQC,EAAOC,IAEnB,IAAMK,EAAoB,SAACC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAcf,EAAegB,QAAQC,MAK3Cb,EAAY,CAAEc,YAAa,CAAEC,KAAMJ,GAAeL,QAASX,EAAMW,WAGlE,OACC,uBAAMU,UAAWC,IAAQC,KAAMC,SAAUX,EAAzC,UACa,YAAXP,GACA,qBAAKe,UAAU,WAAf,SACC,cAACI,EAAA,EAAD,MAGF,sBAAKJ,UAAWC,IAAQI,QAASF,SAAUX,EAA3C,UACC,uBAAOc,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAK7B,OAEtC,qBAAKoB,UAAWC,IAAQS,QAAxB,SACC,wBAAQV,UAAU,MAAlB,+B,iBCnCWW,EARK,SAAChC,GACnB,OACE,oBAAIqB,UAAWC,IAAQW,KAAvB,SACE,4BAAIjC,EAAMoB,U,iBCQDc,EAVM,SAAClC,GACpB,OACE,oBAAIqB,UAAWC,IAAQa,SAAvB,SACGnC,EAAMmC,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAA8BjB,KAAMiB,EAAQjB,MAA1BiB,EAAQT,UC6DnBU,EA1DE,WAChB,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAGQ9B,EAFO+B,cAEP/B,QAER,EAAsDR,YAAQwC,KAAtDtC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcsC,EAAnC,EAA6BC,KAE7BjC,qBAAU,WACTP,EAAYM,KACV,CAACA,EAASN,IAEb,IAMI8B,EAqBJ,MAnBe,YAAX7B,IACH6B,EACC,qBAAKd,UAAU,WAAf,SACC,cAACI,EAAA,EAAD,OAKY,cAAXnB,GAA0BsC,GAAkBA,EAAeE,OAAS,IACvEX,EAAW,cAAC,EAAD,CAAcA,SAAUS,KAIxB,cAAXtC,GACEsC,GAA4C,IAA1BA,EAAeE,SAEnCX,EAAW,mBAAGd,UAAU,WAAb,0CAIX,0BAASA,UAAWC,IAAQa,SAA5B,UACC,gDACEK,GACD,wBAAQnB,UAAU,MAAM0B,QA/BI,WAC9BN,GAAmB,IA8BjB,2BAIAD,GACA,cAAC,EAAD,CACC7B,QAASA,EACTH,eAlCwB,eAqCzB2B,M,iBCpDWa,EATU,SAAChD,GACxB,OACE,yBAAQqB,UAAWC,IAAQ2B,MAA3B,UACE,4BAAIjD,EAAMoB,OACV,qCAAapB,EAAMkD,aCqDVC,UAlDK,WACnB,IAAMC,EAAQC,cAGN1C,EAFO+B,cAEP/B,QAER,EAKIR,YAAQmD,KAAgB,GAJ3BjD,EADD,EACCA,YACAC,EAFD,EAECA,OACMiD,EAHP,EAGCV,KACAtC,EAJD,EAICA,MAOD,OAJAK,qBAAU,WACTP,EAAYM,KACV,CAACN,EAAaM,IAEF,YAAXL,EAEF,qBAAKe,UAAU,WAAf,SACC,cAACI,EAAA,EAAD,MAKClB,EACI,mBAAGc,UAAU,WAAb,SAAyBd,IAG5BgD,EAAYnC,KAKhB,qCACC,cAAC,EAAD,CAAkBA,KAAMmC,EAAYnC,KAAM8B,OAAQK,EAAYL,SAC9D,eAAC,IAAD,CAAOM,KAAMJ,EAAMI,KAAMC,OAAK,EAA9B,UACC,qBAAKpC,UAAU,WAAf,SACC,cAAC,IAAD,CAAMA,UAAU,YAAYqC,GAAE,UAAKN,EAAMO,IAAX,aAA9B,6BAGM,OAER,cAAC,IAAD,CAAOH,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACC,cAAC,EAAD,SAdK","file":"static/js/4.0e358b51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1KUgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1V4xg\",\"loading\":\"NewCommentForm_loading__2P0Fa\",\"control\":\"NewCommentForm_control__sUON_\",\"actions\":\"NewCommentForm_actions__39IsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2TnRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__rtxx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3PXWv\"};","import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from './../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef();\n\n\tconst { sendRequest, status, error } = useHttp(addComment);\n\n\tconst { onAddedComment } = props;\n\n\tconsole.log(props.quoteId);\n\n\tuseEffect(() => {\n\t\tif (status === 'completed' && !error) {\n\t\t\tonAddedComment();\n\t\t}\n\t}, [status, error, onAddedComment]);\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredText = commentTextRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\t// send comment to server\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor=\"comment\">Your Comment</label>\n\t\t\t\t<textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className=\"btn\">Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst params = useParams();\n\n\tconst { quoteId } = params;\n\n\tconst { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId);\n\t}, [quoteId, sendRequest]);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\tconst addedCommentHandler = () => {};\n\n\tlet comments;\n\n\tif (status === 'pending') {\n\t\tcomments = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomments = <CommentsList comments={loadedComments} />;\n\t}\n\n\tif (\n\t\tstatus === 'completed' &&\n\t\t(!loadedComments || loadedComments.length === 0)\n\t) {\n\t\tcomments = <p className=\"centered\">No comments were added yet!</p>;\n\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className=\"btn\" onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm\n\t\t\t\t\tquoteId={quoteId}\n\t\t\t\t\tonAddedComment={addedCommentHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react';\r\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from './../components/quotes/HighlightedQuote';\r\nimport useHttp from './../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from './../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n\tconst match = useRouteMatch();\r\n\tconst params = useParams();\r\n\r\n\tconst { quoteId } = params;\r\n\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuote,\r\n\t\terror,\r\n\t} = useHttp(getSingleQuote, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className=\"centered\">{error}</p>;\r\n\t}\r\n\r\n\tif (!loadedQuote.text) {\r\n\t\treturn <p>No quote Found</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n\t\t\t<Route path={match.path} exact>\r\n\t\t\t\t<div className=\"centered\">\r\n\t\t\t\t\t<Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n\t\t\t\t\t\tLoad Comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>{' '}\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}